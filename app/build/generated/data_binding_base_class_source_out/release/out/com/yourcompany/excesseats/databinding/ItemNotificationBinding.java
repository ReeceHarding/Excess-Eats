// Generated by view binder compiler. Do not edit!
package com.yourcompany.excesseats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.yourcompany.excesseats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNotificationBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView messageText;

  @NonNull
  public final ImageView notificationIcon;

  @NonNull
  public final TextView timeText;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final View unreadIndicator;

  private ItemNotificationBinding(@NonNull MaterialCardView rootView, @NonNull TextView messageText,
      @NonNull ImageView notificationIcon, @NonNull TextView timeText, @NonNull TextView titleText,
      @NonNull View unreadIndicator) {
    this.rootView = rootView;
    this.messageText = messageText;
    this.notificationIcon = notificationIcon;
    this.timeText = timeText;
    this.titleText = titleText;
    this.unreadIndicator = unreadIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.messageText;
      TextView messageText = ViewBindings.findChildViewById(rootView, id);
      if (messageText == null) {
        break missingId;
      }

      id = R.id.notificationIcon;
      ImageView notificationIcon = ViewBindings.findChildViewById(rootView, id);
      if (notificationIcon == null) {
        break missingId;
      }

      id = R.id.timeText;
      TextView timeText = ViewBindings.findChildViewById(rootView, id);
      if (timeText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.unreadIndicator;
      View unreadIndicator = ViewBindings.findChildViewById(rootView, id);
      if (unreadIndicator == null) {
        break missingId;
      }

      return new ItemNotificationBinding((MaterialCardView) rootView, messageText, notificationIcon,
          timeText, titleText, unreadIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
