// Generated by view binder compiler. Do not edit!
package com.yourcompany.excesseats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.maps.MapView;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.yourcompany.excesseats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFoodPostDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton claimButton;

  @NonNull
  public final TextView containerText;

  @NonNull
  public final TextView descriptionText;

  @NonNull
  public final MaterialButton directionsButton;

  @NonNull
  public final ImageView foodImageView;

  @NonNull
  public final Chip foodTypeChip;

  @NonNull
  public final TextView locationText;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final TextView postedByText;

  @NonNull
  public final TextView quantityText;

  @NonNull
  public final TextView timeText;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentFoodPostDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton claimButton, @NonNull TextView containerText,
      @NonNull TextView descriptionText, @NonNull MaterialButton directionsButton,
      @NonNull ImageView foodImageView, @NonNull Chip foodTypeChip, @NonNull TextView locationText,
      @NonNull MapView mapView, @NonNull TextView postedByText, @NonNull TextView quantityText,
      @NonNull TextView timeText, @NonNull TextView titleText, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.claimButton = claimButton;
    this.containerText = containerText;
    this.descriptionText = descriptionText;
    this.directionsButton = directionsButton;
    this.foodImageView = foodImageView;
    this.foodTypeChip = foodTypeChip;
    this.locationText = locationText;
    this.mapView = mapView;
    this.postedByText = postedByText;
    this.quantityText = quantityText;
    this.timeText = timeText;
    this.titleText = titleText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFoodPostDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFoodPostDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_food_post_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFoodPostDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.claimButton;
      MaterialButton claimButton = ViewBindings.findChildViewById(rootView, id);
      if (claimButton == null) {
        break missingId;
      }

      id = R.id.containerText;
      TextView containerText = ViewBindings.findChildViewById(rootView, id);
      if (containerText == null) {
        break missingId;
      }

      id = R.id.descriptionText;
      TextView descriptionText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionText == null) {
        break missingId;
      }

      id = R.id.directionsButton;
      MaterialButton directionsButton = ViewBindings.findChildViewById(rootView, id);
      if (directionsButton == null) {
        break missingId;
      }

      id = R.id.foodImageView;
      ImageView foodImageView = ViewBindings.findChildViewById(rootView, id);
      if (foodImageView == null) {
        break missingId;
      }

      id = R.id.foodTypeChip;
      Chip foodTypeChip = ViewBindings.findChildViewById(rootView, id);
      if (foodTypeChip == null) {
        break missingId;
      }

      id = R.id.locationText;
      TextView locationText = ViewBindings.findChildViewById(rootView, id);
      if (locationText == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.postedByText;
      TextView postedByText = ViewBindings.findChildViewById(rootView, id);
      if (postedByText == null) {
        break missingId;
      }

      id = R.id.quantityText;
      TextView quantityText = ViewBindings.findChildViewById(rootView, id);
      if (quantityText == null) {
        break missingId;
      }

      id = R.id.timeText;
      TextView timeText = ViewBindings.findChildViewById(rootView, id);
      if (timeText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentFoodPostDetailBinding((CoordinatorLayout) rootView, claimButton,
          containerText, descriptionText, directionsButton, foodImageView, foodTypeChip,
          locationText, mapView, postedByText, quantityText, timeText, titleText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
