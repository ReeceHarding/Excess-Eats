// Generated by view binder compiler. Do not edit!
package com.yourcompany.excesseats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.yourcompany.excesseats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserProfileBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnLogout;

  @NonNull
  public final MaterialButton btnSignIn;

  @NonNull
  public final LinearLayout loggedInLayout;

  @NonNull
  public final LinearLayout loggedOutLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentUserProfileBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnLogout, @NonNull MaterialButton btnSignIn,
      @NonNull LinearLayout loggedInLayout, @NonNull LinearLayout loggedOutLayout,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.btnLogout = btnLogout;
    this.btnSignIn = btnSignIn;
    this.loggedInLayout = loggedInLayout;
    this.loggedOutLayout = loggedOutLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogout;
      MaterialButton btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnSignIn;
      MaterialButton btnSignIn = ViewBindings.findChildViewById(rootView, id);
      if (btnSignIn == null) {
        break missingId;
      }

      id = R.id.loggedInLayout;
      LinearLayout loggedInLayout = ViewBindings.findChildViewById(rootView, id);
      if (loggedInLayout == null) {
        break missingId;
      }

      id = R.id.loggedOutLayout;
      LinearLayout loggedOutLayout = ViewBindings.findChildViewById(rootView, id);
      if (loggedOutLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentUserProfileBinding((CoordinatorLayout) rootView, btnLogout, btnSignIn,
          loggedInLayout, loggedOutLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
